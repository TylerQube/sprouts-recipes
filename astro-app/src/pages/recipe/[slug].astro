---
import type { InferGetStaticParamsType } from "astro";
import { PortableText } from "astro-portabletext";
import Layout from "../../layouts/Layout.astro";
import { formatDate } from "../../utils";
import { urlFor, getRandomPlaceholder } from "../../utils/image";
import { getRecipe, getRecipes } from "../../utils/sanity";

export async function getStaticPaths() {
  const recipes = await getRecipes();
  return recipes.map((recipe) => ({
    params: { slug: recipe.slug.current },
  }));
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
const { slug } = Astro.params as Params;

const recipe = await getRecipe(slug);
const placeholder = await getRandomPlaceholder(recipe.title);
console.log(placeholder);
---

<Layout title={recipe.title!}>
  <section class="recipe">
    <div class="recipe__header">
    {
      recipe.mainImage ? (
        <img
          class="recipe__cover"
          src={urlFor(recipe.mainImage).url()}
          alt="Cover image"
        />
      ) : (
        <img class="recipe__cover" src={"/placeholders/" + placeholder} alt="Placeholder">
      )
    }
      <div class="recipe__header__content">
        <h1 class="recipe__title">{recipe.title}</h1>
        <p class="recipe__description">
           { recipe.description && <p>{recipe.description}</p>}
        </p>

      </div>
    </div>
    <div class="recipe__container">
      <div class="recipe__ingredients">
        <h1>Ingredients</h1>
        {recipe.ingredients.length && recipe.ingredients.map((section) => (
          <h3>{section.section}</h3>
          <ul>
            {section.subIngredients.length && section.subIngredients.map(i => (
              <li><input type="checkbox"><span>{i.quantity} {i.unit} {i.name}</span></li>
            ))}
          </ul>
        ))}

      </div>
      </div>

      <div class="recipe__content">
    </div>
  </section>
</Layout>

<style>
  body {
    background-image: url('/corkboard.png');
    background-repeat: repeat;
    border: 15px inset rgb(109, 40, 2);
  }

  body, html {
    position: fixed;
    min-height: 100vh;
    width: 100vw;
    font-family: "Lexend Deca";
  }

  .recipe {
    margin: auto;

    background-color: white;
    padding: 2rem;

    & .recipe__cover,
    & .recipe__cover--none {
      width: min(250px, 90%);
      height: 250px;
      object-fit: cover;
    }

    & .recipe__header {
      display: flex;
      align-items: flex-start;
      justify-content: flex-start;
      gap: 2rem;
    }

    & .recipe__cover--none {
      margin: auto;
      background: var(--black);
    }

    & .recipe__container {
      padding: 0 var(--space-3);
    }

    & .recipe__ingredients {
      & ul {
        list-style-type: none;
        padding: 0;
      }

      & li {
        margin: 0.5rem 0;
      }

      & input:checked + span {
        text-decoration: line-through;
      }
    }

    & .recipe__content {
      font-weight: 400;
      font-size: var(--font-size-4);
      line-height: var(--line-height-5);
      letter-spacing: -0.02em;
      margin-top: var(--space-6);

      /* Targeting tags in PortableText */
      & blockquote {
        border-left: 5px solid var(--black);
        padding-left: var(--space-3);
        margin-left: var(--space-4);
      }

      & a {
        color: var(--blue-600);
        text-decoration: none;
      }
    }

    & .recipe__title {
      font-size: var(--font-size-7);
      line-height: var(--line-height-6);
      margin: 0;
      font-weight: 800;
    }

    & .recipe__excerpt {
      font-size: var(--font-size-5);
      line-height: var(--line-height-4);
      margin-top: 0;
      font-weight: 400;
    }

    & .recipe__date {
      font-weight: 600;
      font-size: var(--font-size-1);
      line-height: var(--line-height-1);
      margin-top: var(--space-4);
    }
  }

  @media (min-width: 800px) {
    .recipe {
      /*& .recipe__cover,
      & .recipe__cover--none {
        width: 750px;
        height: 380px;
      }*/

      & .recipe__title {
        font-size: var(--font-size-10);
        line-height: var(--line-height-10);
        letter-spacing: -0.025em;
      }

      & .recipe__excerpt {
        font-size: var(--font-size-5);
        line-height: var(--line-height-5);
        margin-top: var(--space-3);
        margin-bottom: var(--space-3);
      }

      & .recipe__date {
        font-size: var(--font-size-3);
        line-height: var(--line-height-2);
        margin-top: var(--space-0);
      }

      & .recipe__content {
        margin-top: var(--space-7);
      }
    }
  }
</style>
