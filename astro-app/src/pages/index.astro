---
import Card from "../components/Card.astro";
import Welcome from "../components/Welcome.astro";
import Layout from "../layouts/Layout.astro";
import { getRecipe, getRecipes, type Recipe } from "../utils/sanity";

const breakfast = await getRecipes("breakfast");
const lunch = await getRecipes("lunch");
const bakedGoods = await getRecipes("dessert");
const recipes: { [key: string]: Recipe[] } = {
  "Breakfast": breakfast,
  "Lunch": lunch,
  "Baked Goods": bakedGoods
}
console.log(Object.keys(recipes));
console.log(recipes["Lunch"])
---

<Layout title="Sprouts Recipe Book">
  <section>
    {Object.keys(recipes).map((k: string) => (
      recipes[k].length && 
      <div class="recipe__section">
        <h1 class="recipe-type">{k}</h1>
        <div class="recipe__cards">
          {recipes[k].map((recipe) => <Card recipe={recipe} />)}
        </div>
      </div>
    ))}
  </section>
</Layout>
<style>
  body {
    background-image: url('farm_field.jpg');
    background-size: cover;
    background-attachment: fixed;

    padding-bottom: 1rem;
  }

  html, body {
    min-height: 100vh;
  }

  section {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    gap: 2rem;

    padding: 2rem;

    background: url('/corkboard.png');
    background-repeat: repeat;
    border: 15px solid rgb(109, 40, 2);

  }

  .recipe__cards {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
  }

  .recipe__section {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .recipe-type {
    text-align: center;
    font-size: var(--font-size-7);
    color: white;
    background-color: rgb(108, 40, 0);
    padding: 1rem 2rem;
    border: 2px solid white;
    display: inline-block;

  }

  @media (max-width: 575px) {
    section {
      border-left: 0px;
      border-right: 0px;
    }
  }
</style>